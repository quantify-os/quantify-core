[build-system]
requires = ["setuptools>=66.1"]
build-backend = 'setuptools.build_meta'

[project]
name = "quantify-core"
description="""\
    Quantify-core is a unified quantum computing, solid-state and pulse sequencing \
    physical experimentation framework.\
"""
maintainers = [
    {name = "Edgar Reehuis", email = "ereehuis@qblox.com"},
    {name = "Robert Sokolewicz", email = "rsokolewicz@qblox.com"},
    {name = "Gábor Oszkár Dénes", email = "gdenes@qblox.com"},
    {name = "Amirtha Varshiny Arumugam", email = "amirthavarshiny@orangeqs.com"},
    {name = "Olga Lebiga", email = "olga@orangeqs.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
]
keywords = [
    "quantum",
    "quantify",
]
license = { text = "BSD-3-Clause" }
dynamic = ["version", "readme"]
requires-python = ">=3.8"
dependencies = [
    "numpy !=1.19.4",  # 1.19.4 not allowed because of a bug on windows https://github.com/numpy/numpy/issues/17726
    "qcodes >=0.37.0", # 0.37.0 replaces deprecated pyqtgraph functionality
    "qcodes-loop",
    "scipy >=1.5.0, !=1.6.0",
    "h5netcdf",
    "xarray[io] >=0.19.0",
    "matplotlib !=3.5.0",
    "lmfit >=1.0.3", # Bugfix for lmfit (https://github.com/lmfit/lmfit-py/pull/758)
    "pyqt5 >5.15.2",  # 5.15.2 has known bug, #170, https://bugreports.qt.io/browse/PYSIDE-1473
    "pyqtgraph",
    "jsonschema",
    "adaptive",
    "filelock",
    "appnope",
    "uncertainties<v3.2.3",
    "dataclasses_json", # used in dataset_attrs
    "dill",  # Tests fail without dill installed, likely for a good reason
    "methodtools",  # used in base_analysis for self-bound lru_cache
    "deepdiff", # Used in experiment_helpers.compare_snapshots
    # Scikit-learn is used in AnalysisClass
    "scikit-learn",
    "typing-extensions",  # Independency from python version for "new" typing features
    
]

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-mock",
    "pytest-mpl",
    "diff-cover",
]
docs = [
    "sphinx",
    "pydata-sphinx-theme",
    "myst-nb",
    "rich[jupyter]",
    "scanpydoc",
    "sphinx-autodoc-typehints",  # required by either sphinx.ext.autodoc or sphinx.ext.napoleon (sphinx==4.5.0)
    "sphinx-jsonschema >=1.15",
    "sphinx-togglebutton",
    "sphinxcontrib-bibtex",
    "sphinx-design",
    "jupyter_sphinx>=0.4.0",
]
dev = [
    "quantify-core[docs,test]",
    # Pytest-cov is used to generage test coverage reports, which is rather a development than testing requirement
    "pytest-cov",
    # Run tests in parallel
    "pytest-xdist",
    # Used for a Git filter for commiting Jupyter notebooks
    "nbstripout",
    # Scikit-optimize is used in one optional test
    "scikit-optimize",
    # Linting, code style, static analysis
    "black",
    "pre-commit",
    "pre-commit-hooks",
    "pylint",
    "pyright",
    "ruff",
    # Live rebuild of documentation
    "sphinx-autobuild",
]

[project.urls]
"Documentation" = "https://quantify-os.org/docs/quantify-core"
"Source" = "https://gitlab.com/quantify-os/quantify-core"
"Issue tracker" = "https://gitlab.com/quantify-os/quantify-core/-/issues"
"Changelog" = "https://gitlab.com/quantify-os/quantify-core/-/blob/main/CHANGELOG.md"
"Slack" = "https://join.slack.com/t/quantify-hq/shared_invite/zt-1nd78r4e9-rbWdna53cW4DO_YbtMhVuA"
"Authors" = "https://gitlab.com/quantify-os/quantify-core/-/blob/main/AUTHORS.md"

[tool.setuptools]
include-package-data = true
zip-safe = false

[tool.setuptools.packages.find]
include = ["quantify_core", "quantify_core.*"]

[tool.setuptools.package-data]
quantify_core = ["py.typed", "**/schemas/*.json"]

[tool.setuptools.dynamic]
readme = { file = ["README.md"], content-type = "text/markdown" }

[tool.isort]
profile = "black"

[tool.ruff]
line-length = 88
lint.select = [
    "F",  # pyflakes
    "E",  # pycodestyle
    "W",  # pycodestyle
    "D",  # pydocstyle
    "I",  # isort
    "N",  # flake8-naming
    "UP", # pyupgrade
    "TID",  # flake8-tidy-imports
    "SIM",  # flake8-simplify
    "TCH",  # flake8-type-checking
    "Q", #flake8-quotes
    "ARG", #flake8-unused-arguments
    "ANN",  # flake8-annotations
    #Pylint (PLC, PLE, PLR, PLW)
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    #numpy 2.0 migration
    "NPY201"
]

# ignore these rules for all files:
lint.ignore = [
    # missing doctring in `__init__` -- we document __init__ in class docstring
    "D107",
    # 1 blank line required before class docstring
    "D203",
    # Multi-line docstring summary should start at the first line
    "D212",
    # Ambiguous variable name
    "E741",
    # Variable `...` in function should be lowercase
    "N806",
    # Too many arguments to function call (.../5)
    "PLR0913",
    # Class attribute `compile` is shadowing a python builtin
    "A003",
    # Missing type annotation for `self` in method
    "ANN101",
    # Magic value used in comparison, consider replacing `...` with a constant variable
    "PLR2004",
    # First line of docstring should be in imperative mood
    "D401",
    # 1 blank line required between summary line and description
    "D205",
    # Multi-line docstring summary should start at the second line (conflicts with black)
    "D213",
    # Missing type annotation for `**kwargs`
    "ANN003",
    # Missing type annotation for `*args`
    "ANN002",
    # No blank lines allowed before class docstring (conflicts with black)
    "D211",
    #  Missing blank line after last section
    "D413",
]
exclude = [
    "docs",
]

[tool.ruff.lint.isort]
known-first-party = ["quantify_core", "quantify_scheduler"]

[tool.ruff.lint.per-file-ignores]
"setup.py" = ["D", "ANN"]
"conftest.py" = ["D", "ANN"]
"tests/*" = ["D", "ANN"]

# - E402: Module level import not at top of file
# - F401: Multiple imports on one line
# - D104: Missing docstring in public package
"docs/source/conf.py" = ["E402", "F401"]
"__init__.py" = ["F401", "D104"]

"quantify_core/_static_version.py" = ['UP009']
"quantify_core/_version.py" = ['ANN001', 'ANN202', 'I001', 'N801', 'PLR0912', 'SIM105', 'UP009', 'UP032']
"quantify_core/analysis/base_analysis.py" = ['ANN001', 'ANN102', 'ANN201', 'ANN202', 'ANN204', 'ANN205']
"quantify_core/analysis/calibration.py" = ['ANN202']
"quantify_core/analysis/cosine_analysis.py" = ['ANN201', 'D200', 'E501']
"quantify_core/analysis/fitting_models.py" = ['ANN001', 'ANN201', 'ANN204', 'D102', 'D200', 'D202', 'D400', 'D404', 'D415', 'D417', 'E501', 'N802', 'N803', 'TCH002', 'UP006']
"quantify_core/analysis/interpolation_analysis.py" = ['ANN201', 'D100', 'D202']
"quantify_core/analysis/optimization_analysis.py" = ['ANN001', 'ANN201', 'D100', 'D200', 'D202']
"quantify_core/analysis/schemas/__init__.py" = ['D104']
"quantify_core/analysis/single_qubit_timedomain.py" = ['ANN201', 'ANN202', 'D102', 'D200', 'D202', 'D400', 'D415', 'F401', 'UP007']
"quantify_core/analysis/spectroscopy_analysis.py" = ['ANN201', 'ANN202', 'D100', 'D200', 'D202', 'E501']
"quantify_core/analysis/types.py" = ['ANN001', 'ANN204', 'D400', 'D415']
"quantify_core/data/dataset_adapters.py" = ['ANN102', 'D202', 'D417', 'SIM118']
"quantify_core/data/dataset_attrs.py" = ['D202', 'TCH002', 'UP006', 'UP007']
"quantify_core/data/experiment.py" = ['ANN001', 'ANN201', 'ANN204', 'D105', 'I001']
"quantify_core/data/types.py" = ['ANN102', 'D102', 'E501', 'F541', 'UP006']
"quantify_core/measurement/__init__.py" = ['D400', 'D415']
"quantify_core/measurement/control.py" = ['ANN001', 'ANN201', 'ANN202', 'ANN204', 'ARG002', 'D102', 'D105', 'D200', 'D202', 'D400', 'D404', 'D409', 'D415', 'E501', 'E713', 'I001', 'PLR0912', 'TCH003', 'UP006', 'UP007']
"quantify_core/measurement/gettables.py" = ['D200']
"quantify_core/measurement/schemas/__init__.py" = ['D104']
"quantify_core/measurement/types.py" = ['ANN401', 'ARG001', 'D102', 'D400', 'D415']
"quantify_core/utilities/_docs_helpers.py" = ['ANN202', 'D400', 'D415', 'TCH001', 'UP007']
"quantify_core/utilities/_tests_helpers.py" = ['ANN001', 'ANN202']
"quantify_core/utilities/dataset_examples.py" = ['ANN201', 'D200', 'D202', 'D400', 'D415', 'UP007']
"quantify_core/utilities/deprecation.py" = ['ANN001', 'ANN202', 'N807', 'SIM108']
"quantify_core/utilities/examples_support.py" = ['ANN202', 'D202', 'D417', 'I001', 'TCH002', 'UP006', 'UP007']
"quantify_core/utilities/experiment_helpers.py" = ['ANN202', 'ANN401', 'D200', 'D409', 'D410', 'D411', 'E713', 'I001', 'PLR0915', 'SIM118', 'TCH001', 'UP006', 'UP007', 'W605']
"quantify_core/utilities/general.py" = ['ANN001', 'ANN201', 'ANN401', 'D200', 'D400', 'D407', 'D409', 'D410', 'D411', 'D415']
"quantify_core/utilities/inspect_utils.py" = ['D202']
"quantify_core/visualization/SI_utilities.py" = ['ANN001', 'ANN201', 'ANN204', 'N802', 'N999']
"quantify_core/visualization/_appnope.py" = ['D200', 'D400', 'D415', 'N814']
"quantify_core/visualization/color_utilities.py" = ['ANN001', 'ANN201', 'D103', 'D400', 'D415', 'D417', 'E731']
"quantify_core/visualization/ins_mon_widget/__init__.py" = ['D104']
"quantify_core/visualization/ins_mon_widget/qc_snapshot_widget.py" = ['ANN001', 'ANN201', 'ANN202', 'ANN204', 'ANN205', 'ANN401', 'D102', 'D200', 'D400', 'D415', 'E501', 'E713', 'I001', 'N802', 'PLW2901', 'SIM108', 'SIM118']
"quantify_core/visualization/instrument_monitor.py" = ['ANN001', 'ANN201', 'ANN202', 'ANN204', 'D101', 'D102', 'D200', 'D400', 'D415', 'E501', 'N802']
"quantify_core/visualization/mpl_plotting.py" = ['ANN001', 'D200', 'D202', 'D400', 'D409', 'D415', 'D417', 'TCH002']
"quantify_core/visualization/plot_interpolation.py" = ['ANN001', 'ANN201', 'D103', 'D202', 'D410', 'D411', 'E501', 'UP032']
"quantify_core/visualization/pyqt_plotmon.py" = ['ANN001', 'ANN201', 'ANN202', 'ANN204', 'D200', 'D400', 'D415', 'E501', 'N801', 'N802']
"quantify_core/visualization/pyqt_plotmon_remote.py" = ['ANN001', 'ANN201', 'ANN202', 'ANN204', 'D200', 'D202', 'D400', 'D415', 'E501', 'I001', 'PLR0912', 'PLR0915', 'SIM118', 'TCH002', 'TCH003', 'UP007']
"tests/analysis/test_base_analysis.py" = ['F401']
"tests/analysis/test_spectroscopy_analysis.py" = ['SIM118']
"tests/data/test_data_handling.py" = ['E712', 'F841', 'I001']
"tests/data/test_experiment.py" = ['I001']
"tests/data/test_types.py" = ['N802']
"tests/measurement/test_types.py" = ['ARG001']
"tests/test_headers_and_copyright.py" = ['UP015', 'UP032']
"tests/utilities/test_experiment_helpers.py" = ['E501', 'I001']
"tests/utilities/test_general.py" = ['I001', 'SIM118']
"tests/visualization/test_SI_utilities.py" = ['I001', 'N802', 'PLR0133', 'SIM300']
"tests/visualization/test_instrument_monitor.py" = ['I001', 'N802']
"tests/visualization/test_mpl_plotting.py" = ['F841', 'I001']
"tests/visualization/test_pyqt_plotmon.py" = ['E501']

[tool.pyright]
exclude = [
    "setup.py",
    "quantify_core/analysis/base_analysis.py",
    "quantify_core/analysis/calibration.py",
    "quantify_core/analysis/conditional_oscillation_analysis.py",
    "quantify_core/analysis/cosine_analysis.py",
    "quantify_core/analysis/fitting_models.py",
    "quantify_core/analysis/interpolation_analysis.py",
    "quantify_core/analysis/optimization_analysis.py",
    "quantify_core/analysis/readout_calibration_analysis.py",
    "quantify_core/analysis/single_qubit_timedomain.py",
    "quantify_core/analysis/spectroscopy_analysis.py",
    "quantify_core/analysis/types.py",
    "quantify_core/data/dataset_adapters.py",
    "quantify_core/data/dataset_attrs.py",
    "quantify_core/data/experiment.py",
    "quantify_core/data/handling.py",
    "quantify_core/measurement/control.py",
    "quantify_core/utilities/_docs_helpers.py",
    "quantify_core/utilities/_tests_helpers.py",
    "quantify_core/utilities/dataset_examples.py",
    "quantify_core/utilities/examples_support.py",
    "quantify_core/utilities/experiment_helpers.py",
    "quantify_core/utilities/general.py",
    "quantify_core/utilities/inspect_utils.py",
    "quantify_core/visualization/SI_utilities.py",
    "quantify_core/visualization/instrument_monitor.py",
    "quantify_core/visualization/mpl_plotting.py",
    "quantify_core/visualization/plot_interpolation.py",
    "quantify_core/visualization/pyqt_plotmon.py",
    "quantify_core/visualization/pyqt_plotmon_remote.py",
    "quantify_core/visualization/ins_mon_widget/qc_snapshot_widget.py",
    "tests/analysis/test_base_analysis.py",
    "tests/analysis/test_calibration.py",
    "tests/analysis/test_fitting_models.py",
    "tests/analysis/test_single_qubit_timedomain.py",
    "tests/data/test_data_handling.py",
    "tests/data/test_experiment.py",
    "tests/measurement/test_measurement_control.py",
    "tests/measurement/test_types.py",
    "tests/utilities/test_deprecation.py",
    "tests/utilities/test_experiment_helpers.py",
    "tests/utilities/test_general.py",
    "tests/visualization/test_instrument_monitor.py",
    "tests/visualization/test_mpl_plotting.py",
    "tests/visualization/test_pyqt_plotmon.py",
]
